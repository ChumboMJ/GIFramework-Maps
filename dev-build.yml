# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

steps:
- task: NuGetToolInstaller@1

- task: Cache@2
  displayName: 'NuGet Cache'
  inputs:
    key: 'nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**,!**/obj/**'''
    restoreKeys: |
       nuget | "$(Agent.OS)"
       nuget
    path: '$(NUGET_PACKAGES)'
    cacheHitVar: 'CACHE_RESTORED'

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  condition: ne(variables.CACHE_RESTORED, true)
  inputs:
    restoreSolution: '$(solution)'

- script: npm install webpack -g
  displayName: 'Install webpack'
  workingDirectory: '$(Build.SourcesDirectory)/GIFrameworkMaps.Web'

- script: npm install webpack-cli -g
  displayName: 'Install webpack CLI'
  workingDirectory: '$(Build.SourcesDirectory)/GIFrameworkMaps.Web'

- script: npm install
  displayName: 'npm install'
  workingDirectory: '$(Build.SourcesDirectory)/GIFrameworkMaps.Web'
    
- script: webpack --mode=development
  displayName: 'webpack'
  workingDirectory: '$(Build.SourcesDirectory)/GIFrameworkMaps.Web'

- task: VSBuild@1
  displayName: 'VS Build'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    projects: '$(Build.SourcesDirectory)/GIFrameworkMaps.Tests'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'giframeworkmaps-$(Build.SourceVersion)'
    publishLocation: 'Container'